<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Byron Wasti</title>
    <link>http://byronwasti.com/post/</link>
    <description>Recent content in Posts on Byron Wasti</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 04 Mar 2018 17:08:02 -0500</lastBuildDate>
    
	<atom:link href="http://byronwasti.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Writing A Driver in Rust Using Embedded-Hal Traits for the RN4870 BLE Module</title>
      <link>http://byronwasti.com/post/writing_a_ble_driver_in_rust/</link>
      <pubDate>Sun, 04 Mar 2018 17:08:02 -0500</pubDate>
      
      <guid>http://byronwasti.com/post/writing_a_ble_driver_in_rust/</guid>
      <description>The repository for the driver is located here: https://github.com/byronwasti/rn4870
This post will document my process and thoughts on writing a driver for a bluetooth module using Rust and the embedded-hal crate. Note that this is not a driver release, as the driver is in not complete and will most likely be going through a rewrite due to things I learned while writing the driver.
The specific bluetooth device I will be using is the RN4870 BLE castellated module.</description>
    </item>
    
    <item>
      <title>Prusto Watch #1: First Steps into Arm and the Embedded-Rust Ecosystem</title>
      <link>http://byronwasti.com/post/prusto_watch_1/</link>
      <pubDate>Mon, 12 Feb 2018 21:34:57 -0500</pubDate>
      
      <guid>http://byronwasti.com/post/prusto_watch_1/</guid>
      <description>In this post I will describe my initial dive into Arm development using Rust. There are potentially many mistakes in my understanding, so this post should not be used as a reference for how to do embedded development in Rust. However, I think it is useful to describe the learning process so that those more experienced can see the pain-points of beginners.
Firmware Tools The build system I am using follows japaric&amp;rsquo;s system, which he writes about here.</description>
    </item>
    
    <item>
      <title>Prusto Watch #0: Design &amp; Goals of the Project</title>
      <link>http://byronwasti.com/post/prusto_watch_0/</link>
      <pubDate>Thu, 23 Nov 2017 09:59:59 -0500</pubDate>
      
      <guid>http://byronwasti.com/post/prusto_watch_0/</guid>
      <description>Code Repo is here: https://github.com/byronwasti/prusto-watch
Hardware Repo is here: https://github.com/byronwasti/prusto-watch-hardware
The Prusto Watch is an Open Source smart watch with firmware written in Rust, or at least it will be that one day. Currently, the Prusto Watch is just a concept. I plan on writing a series of blog posts documenting my progress in developing the watch, with a focus on going through my thought process. A large goal of this project is to help document the current state of embedded development in Rust, since currently there is not a lot out there.</description>
    </item>
    
  </channel>
</rss>